<?php

/**
 * Implements hook_islandora_viewer_info().
 */
function islandora_video_streaming_panopto_islandora_viewer_info() {
  return array(
    'islandora_video_streaming_panopto' => array(
      'label' => t('Panopto'),
      'description' => t('Use Panopto video streaming service'),
      'derivative_description' => t('Upload new content to Panopto video streaming service'),
      'mimetype' => array('application/javascript'),
      'configuration' => '',
    ),
  );
}

/**
 * Implements hook_islandora_CMODEL_PID_derivative()
 * 
**/
function islandora_video_streaming_panopto_islandora_sp_videoCModel_islandora_derivative() {
  $deriviatives = array();
  if (variable_get('islandora_video_streaming_panopto_make_derivative', false)) {
    $derivatives[] = array(
      'source_dsid' => 'OBJ',
      'destination_dsid' => 'PANOPTO_INFO',
      'weight' => '0',
      'function' => array(
        'islandora_video_streaming_panopto_upload',
      ),
      'file' => drupal_get_path('module', 'islandora_video_streaming') . '/includes/panopto_derivatives.inc',
    );
  }
}

/**
 * Change output for streaming capable videos, when appropriate
 * implements hook_process_islandora_video
 *
 * @var $variables array The page content variables
 */
function islandora_video_streaming_panopto_process_islandora_video($variables = array()) {
  $object = $variables['object'];
  $streamDatastream = 'PANOPTO_INFO';
  // If a streaming datastream is available, and if configured to stream
  if ($object[$streamDatastream] && variable_get('islandora_video_streaming_viewers')) {
    // get the viewer params of PID and URL
    $params = array('url' => $object[$streamDatastream]->url);
    // get a streaming viewer instance
    $new_content = ''; // TODO: theme a Panopto viewer
    // if the viewer was created successfully, overwrite the non-streaming viewer
    if (isset($new_content) && $new_content) {
      $variables['islandora_content'] = $new_content;
    }
  }
}



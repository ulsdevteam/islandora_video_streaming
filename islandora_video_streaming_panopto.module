<?php

/**
 * Implements hook_menu().
 */
function islandora_video_streaming_panopto_menu() {
  return array(
    'admin/islandora/islandora_viewers/video_streaming_panopto' => array(
      'title' => 'Panopto Video Streaming',
      'description' => 'Configure the Panopto Video Streaming Viewer',
      'page callback' => 'drupal_get_form',
      'access arguments' => array('administer site configuration'),
      'page arguments' => array('islandora_video_streaming_panopto_admin'),
      'file' => 'includes/panopto_admin.form.inc',
      'type' => MENU_NORMAL_ITEM,
    ),
  );
}
/**
 * Implements hook_islandora_viewer_info().
 */
function islandora_video_streaming_panopto_islandora_viewer_info() {
  return array(
    'islandora_video_streaming_panopto' => array(
      'label' => t('Panopto'),
      'description' => t('Use Panopto video streaming service'),
      'derivative_description' => t('Upload new content to Panopto video streaming service'),
      'mimetype' => array('application/javascript'),
      'configuration' => '',
    ),
  );
}

/**
 * Implements hook_islandora_CMODEL_PID_derivative()
 * 
**/
function islandora_video_streaming_panopto_islandora_sp_videoCModel_islandora_derivative() {
  $deriviatives = array();
  if (variable_get('islandora_video_streaming_panopto_make_derivative', false)) {
    $derivatives[] = array(
      'source_dsid' => 'OBJ',
      'destination_dsid' => 'PANOPTO_INFO',
      'weight' => '0',
      'function' => array(
        'islandora_video_streaming_panopto_upload',
      ),
      'file' => drupal_get_path('module', 'islandora_video_streaming') . '/includes/panopto_derivatives.inc',
    );
  }
  return $derivatives; 
}

/**
 * Change output for streaming capable videos, when appropriate
 * implements hook_process_islandora_video
 *
 * @var $variables array The page content variables
 */
function islandora_video_streaming_panopto_process_islandora_video(&$variables = array()) {
  $object = $variables['object'];
  $streamDatastream = 'PANOPTO_INFO';
  // If a streaming datastream is available, and if configured to stream
  if ($object[$streamDatastream] && variable_get('islandora_video_streaming_viewers')) {
    $panopto_object = json_decode($object[$streamDatastream]->content);
    $var = array(
        'url' => $panopto_object->upload_id,
        'height' => variable_get('islandora_video_streaming_panopto_video_height'),
        'width' => variable_get('islandora_video_streaming_panopto_video_width'),
        'aspect_ratio' => variable_get('islandora_video_streaming_panopto_video_aspect_ratio'),
        'start_at' => variable_get('islandora_video_streaming_panopto_video_start_at'),
        'interactivity' => variable_get('islandora_video_streaming_panopto_video_video_interactivity'),
        'autoplay' => variable_get('islandora_video_streaming_panopto_video_video_autoplay'),
        'showbrand' => variable_get('islandora_video_streaming_panopto_video_video_showbrand'),
        'showtitle' => variable_get('islandora_video_streaming_panopto_video_video_showtitle'),
        'offer_viewer' => variable_get('islandora_video_streaming_panopto_video_video_offer_viewer'),      
    );
    $new_content = theme('panopto_streaming_iframe', $var);
    // if the viewer was created successfully, overwrite the non-streaming viewer
    if (isset($new_content) && $new_content) {
      $variables['islandora_content'] = $new_content;
    } 
  }
}

/*
 * Implements hook_libraries_info().
 * @return array Library needed for upload
 */
function islandora_video_streaming_panopto_libraries_info() {
  $libraries['php-panopto-upload-api'] = array(
    'name' => 'panopto upload api library',
    'vendor url' => 'http://www.example.com',
    'download url' => 'http://www.example.com',
    'path' => 'lib',
    'version arguments' => array(
      'file' => 'lib/Client.php',
      'pattern' => '/Version ([0-9.]+)/', 
    ), 
    'files' => array(
      'php' => array('Client.php')
    )
  );
  return $libraries;
}

/*
 * Implements hook_theme()
 * @return array Everything necessary for iframe.tpl.theme
 */
function islandora_video_streaming_panopto_theme() {
  return array(
    'panopto_streaming_iframe' => array(
      'variables' => array(
        'url' => null,
        'height' => null,
        'width' => null,
        'aspect_ratio' => null,
        'start_at' => null,
        'interactivity' => null,
        'autoplay' => null,
        'showbrand' => null,
        'showtitle' => null,
        'offer_viewer' => null,
      ),
      'template' => 'iframe',
      'path' => drupal_get_path('module','islandora_video_streaming') . DIRECTORY_SEPARATOR. 'theme',
    )
  );
} 

/*
 * Implements hook_islandora_object_alter().
 * @param AbstractObject $object The object being altered
 * @param array $context The context or action of which the object will be altered
 */
function islandora_video_streaming_panopto_islandora_object_alter(AbstractObject $object, &$context) {
  islandora_video_streaming_panopto_delete_from_panopto($object, $context);
} 

/*
 * Implements hook_islandora_datastream_alter().
 * @param AbstractObject $object The object being altered
 * @param AbstractDatastream $datastream The datastream being altered
 * @param array $context The context or action of which the object will be altered
 */
function islandora_video_streaming_panopto_islandora_datastream_alter(AbstractObject $object, AbstractDatastream $datastream, &$context) {
  if ($datastream->id == 'PANOPTO_INFO') {
    islandora_video_streaming_panopto_delete_from_panopto($object, $context);
  }
}

/*
 * Deletes video from Panopto server.
 * @param AbstractObject $object The object being altered
 * @param array $context The context or action of which the object will be altered
 */
function islandora_video_streaming_panopto_delete_from_panopto(AbstractObject $object, &$context) {
  if (isset($object['PANOPTO_INFO']) && ($context['action'] == 'purge' || $context['action'] == 'delete' )) {
    $decoded = json_decode($object['PANOPTO_INFO']->content);
    if (isset($decoded)) {
      $id = $decoded->upload_id;
      if (isset($id)) {
        libraries_load('php-panopto-upload-api');
        $host = variable_get('islandora_video_streaming_panopto_host');
        $client = new \PanoptoUpload\Client($host);
        $client_id = variable_get('islandora_video_streaming_panopto_client_id');
        $secret_client_id = variable_get('islandora_video_streaming_panopto_secret_client_id');
        $username = variable_get('islandora_video_streaming_panopto_username');
        $password = variable_get('islandora_video_streaming_panopto_password');
        $client->authenticate($client_id, $secret_client_id, $username, $password);
        $client->deleteSession($id);
      }
    }
  }
}
